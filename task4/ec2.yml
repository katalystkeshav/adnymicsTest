
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t3.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
  SshLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  AmiId:
    Description: The id of image which will run on EC2 instance
    Type: String
    Default: ami-0ebc1ac48dfd14136
  DiskName:
    Description: The name of disk which will be attached to EC2 instance eg /dev/xvda
    Type: String
    Default: /dev/xvda
  DiskSize:
    Description: The size of disk in GB which will be attached to EC2 instance
    Type: String
    Default: 10
  Subnets:
    Description: The list of subnets on which the EC2 instance will launch
    Type: List<AWS::EC2::Subnet::Id>
  Vpc:
    Description: Id of Vpc in which security group will be launched
    Type: String
    Default: vpc-010d3c69

Resources:
  EC2Instance1:
    DependsOn: InstanceSecurityGroup
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings: 
      - DeviceName: !Ref DiskName
        Ebs: 
          DeleteOnTermination: true
          VolumeSize: !Ref DiskSize
          VolumeType: gp2
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces: 
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        DeviceIndex: '0'
        GroupSet:
        - !Ref InstanceSecurityGroup
        SubnetId: !Select [ 0, !Ref Subnets ]
      Tags: 
      - Key: env
        Value: task

  EC2Instance2:
    DependsOn: InstanceSecurityGroup
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings: 
      - DeviceName: !Ref DiskName
        Ebs: 
          DeleteOnTermination: true
          VolumeSize: !Ref DiskSize
          VolumeType: gp2
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces: 
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        DeviceIndex: '0'
        GroupSet:
        - !Ref InstanceSecurityGroup
        SubnetId: !Select [ 1, !Ref Subnets ]
      Tags: 
      - Key: env
        Value: task

  EC2Instance3:
    DependsOn: InstanceSecurityGroup
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings: 
      - DeviceName: !Ref DiskName
        Ebs: 
          DeleteOnTermination: true
          VolumeSize: !Ref DiskSize
          VolumeType: gp2
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces: 
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        DeviceIndex: '0'
        GroupSet:
        - !Ref InstanceSecurityGroup
        SubnetId: !Select [ 2, !Ref Subnets ]
      Tags: 
      - Key: env
        Value: task

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access via port 2222
      GroupName: ssh
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '2222'
        ToPort: '2222'
        CidrIp:
          Ref: SshLocation
      VpcId: !Ref Vpc

Outputs:
  InstanceId1:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: EC2Instance1
  PublicIP1:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance1
      - PublicIp
  InstanceId2:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: EC2Instance2
  PublicIP2:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance2
      - PublicIp
  InstanceId3:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: EC2Instance3
  PublicIP3:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - EC2Instance3
      - PublicIp